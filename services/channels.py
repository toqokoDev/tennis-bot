from typing import Any, Dict
from aiogram import Bot, types
from aiogram.types import FSInputFile

from config.paths import BASE_DIR
from config.profile import channels_id, tour_channel_id
from utils.utils import create_user_profile_link

async def send_registration_notification(message: types.Message, profile: dict):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –Ω–æ–≤–æ–π —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª"""
    try:
        city = profile.get('city', '‚Äî')
        district = profile.get('district', '')
        if district:
            city = f"{city} - {district}"
            
        username_text = "\n"
        if profile.get('username'):
            username_text = f"‚úâÔ∏è @{profile.get('username')}\n\n"
        
        role = profile.get('role', '–ò–≥—Ä–æ–∫')
        sport = profile.get('sport', 'üéæ–ë–æ–ª—å—à–æ–π —Ç–µ–Ω–Ω–∏—Å')
        channel_id = channels_id.get(sport, channels_id.get("üéæ–ë–æ–ª—å—à–æ–π —Ç–µ–Ω–Ω–∏—Å"))

        # –†–∞–∑–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–æ–≤ –∏ –∏–≥—Ä–æ–∫–æ–≤
        if role == "–¢—Ä–µ–Ω–µ—Ä":
            registration_text = (
                "üë®‚Äçüè´ *–ù–æ–≤—ã–π —Ç—Ä–µ–Ω–µ—Ä –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ!*\n\n"
                f"üèÜ {await create_user_profile_link(profile, profile.get('telegram_id'))}\n"
                f"üí∞ {profile.get('price', 0)} —Ä—É–±./—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n"
                f"üìç {city} ({profile.get('country', '')})\n"
                f"{username_text}"
                f"#—Ç—Ä–µ–Ω–µ—Ä"
            )
        else:
            registration_text = (
                "üéæ *–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É!*\n\n"
                f"üë§ {await create_user_profile_link(profile, profile.get('telegram_id'))}\n" 
                f"üí™ {profile.get('player_level', '–ù–µ —É–∫–∞–∑–∞–Ω')} —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã\n"
                f"üìç {city} ({profile.get('country', '')})\n"
                f"{username_text}"
                f"#–∏–≥—Ä–æ–∫"
            )
        
        if profile.get('photo_path'):
            await message.bot.send_photo(
                chat_id=channel_id,
                photo=FSInputFile(BASE_DIR / profile.get('photo_path')),
                caption=registration_text,
                parse_mode="Markdown"
            )
        else:
            await message.bot.send_message(
                chat_id=channel_id,
                text=registration_text,
                parse_mode="Markdown"
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è: {e}")

async def send_game_notification_to_channel(bot: Bot, data: Dict[str, Any], users: Dict[str, Any], user_id: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –∏–≥—Ä–µ –≤ –∫–∞–Ω–∞–ª"""

    game_type = data.get('game_type')
    score = data.get('score')

    sport = users.get(user_id, {}).get('sport', 'üéæ–ë–æ–ª—å—à–æ–π —Ç–µ–Ω–Ω–∏—Å')
    channel_id = channels_id.get(sport, channels_id.get("üéæ–ë–æ–ª—å—à–æ–π —Ç–µ–Ω–Ω–∏—Å"))

    game_text = ""
    media_group = []

    if game_type == 'single':
        # –û–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞
        player1_id = data.get('current_user_id')
        player2_id = data.get('opponent1', {}).get('telegram_id')
        
        player1 = users.get(player1_id, {})
        player2 = users.get(player2_id, {})
        
        player1_link = await create_user_profile_link(player1, player1_id, False)
        player2_link = await create_user_profile_link(player2, player2_id, False)
        
        winner_side = data.get('winner_side')
        if winner_side == "team1":
            winner_link, loser_link = player1_link, player2_link
        else:
            winner_link, loser_link = player2_link, player1_link
        
        game_text = (
            "üéæ *–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –æ–¥–∏–Ω–æ—á–Ω–∞—è –∏–≥—Ä–∞!*\n\n"
            f"{winner_link} –≤—ã–∏–≥—Ä–∞–ª —É {loser_link}\n\n"
            f"üìä –°—á–µ—Ç: {score}\n\n"
            f"#–∏–≥—Ä–∞"
        )

        # —Å–æ–±–µ—Ä–µ–º —Ñ–æ—Ç–æ –∏–≥—Ä–æ–∫–æ–≤
        for pl in (player1, player2):
            if pl.get("photo_path"):
                media_group.append(
                    types.InputMediaPhoto(media=open(pl["photo_path"], "rb"))
                )
        
    else:
        # –ü–∞—Ä–Ω–∞—è –∏–≥—Ä–∞
        team1_player1_id = str(data.get('current_user_id'))
        team1_player2_id = data.get('partner', {}).get('telegram_id')
        team2_player1_id = data.get('opponent1', {}).get('telegram_id')
        team2_player2_id = data.get('opponent2', {}).get('telegram_id')
        
        team1_player1 = users.get(team1_player1_id, {})
        team1_player2 = users.get(team1_player2_id, {})
        team2_player1 = users.get(team2_player1_id, {})
        team2_player2 = users.get(team2_player2_id, {})
        
        team1_player1_link = await create_user_profile_link(team1_player1, team1_player1_id, False)
        team1_player2_link = await create_user_profile_link(team1_player2, team1_player2_id, False)
        team2_player1_link = await create_user_profile_link(team2_player1, team2_player1_id, False)
        team2_player2_link = await create_user_profile_link(team2_player2, team2_player2_id, False)
        
        winner_side = data.get('winner_side')
        if winner_side == "team1":
            winner_team = f"{team1_player1_link} –∏ {team1_player2_link}"
            loser_team = f"{team2_player1_link} –∏ {team2_player2_link}"
        else:
            winner_team = f"{team2_player1_link} –∏ {team2_player2_link}"
            loser_team = f"{team1_player1_link} –∏ {team1_player2_link}"
        
        game_text = (
            "üéæ *–ó–∞–≤–µ—Ä—à–µ–Ω–∞ –ø–∞—Ä–Ω–∞—è –∏–≥—Ä–∞!*\n\n"
            f"{winner_team} –≤—ã–∏–≥—Ä–∞–ª–∏ —É {loser_team}\n\n"
            f"üìä –°—á–µ—Ç: {score}\n\n"
            f"#–∏–≥—Ä–∞"
        )

        # —Å–æ–±–µ—Ä–µ–º —Ñ–æ—Ç–æ –∏–≥—Ä–æ–∫–æ–≤ (–¥–æ 4)
        for pl in (team1_player1, team1_player2, team2_player1, team2_player2):
            if pl.get("photo_path"):
                media_group.append(
                    types.InputMediaPhoto(media=open(pl["photo_path"], "rb"))
                )

    # --- –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∫–∞–Ω–∞–ª ---
    if 'photo_id' in data:
        await bot.send_photo(
            chat_id=channel_id,
            photo=data['photo_id'],
            caption=game_text,
            parse_mode="Markdown"
        )
    elif 'video_id' in data:
        await bot.send_video(
            chat_id=channel_id,
            video=data['video_id'],
            caption=game_text,
            parse_mode="Markdown"
        )
    elif media_group:
        # –µ—Å–ª–∏ —Ñ–æ—Ç–æ/–≤–∏–¥–µ–æ –∏–≥—Ä—ã –Ω–µ—Ç, —à–ª—ë–º —Ñ–æ—Ç–æ –∏–≥—Ä–æ–∫–æ–≤ –∫–∞–∫ –∞–ª—å–±–æ–º
        media_group[0].caption = game_text
        media_group[0].parse_mode = "Markdown"
        await bot.send_media_group(chat_id=channel_id, media=media_group)
    else:
        # –µ—Å–ª–∏ –≤–æ–æ–±—â–µ –Ω–µ—Ç —Ñ–æ—Ç–æ ‚Äî —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
        await bot.send_message(
            chat_id=channel_id,
            text=game_text,
            parse_mode="Markdown"
        )

async def send_game_offer_to_channel(bot: Bot, game_data: Dict[str, Any], user_id: str, user_data: Dict[str, Any]):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä—ã –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª"""
    try:
        from config.profile import get_sport_config
        
        profile_link = await create_user_profile_link(user_data, user_id)
        sport = game_data.get('sport', user_data.get('sport', '–ù–µ —É–∫–∞–∑–∞–Ω'))
        
        # –ü–æ–ª—É—á–∞–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –≤–∏–¥–∞ —Å–ø–æ—Ä—Ç–∞
        config = get_sport_config(sport)
        category = config.get("category", "court_sport")
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        if category == "dating":
            # –î–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤
            offer_text = (
                f"üíï *–ê–Ω–∫–µ—Ç–∞ –¥–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤*\n\n"
                f"üë§ {profile_link}\n"
                f"üìç {game_data.get('city', '‚Äî')}\n"
                f"üìÖ {game_data.get('date', '‚Äî')} –≤ {game_data.get('time', '‚Äî')}\n"
            )
            
            # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—è –∑–Ω–∞–∫–æ–º—Å—Ç–≤
            if game_data.get('dating_goal'):
                offer_text += f"üíï –¶–µ–ª—å: {game_data.get('dating_goal')}\n"
            
            if game_data.get('dating_interests'):
                interests = ', '.join(game_data.get('dating_interests', []))
                offer_text += f"üéØ –ò–Ω—Ç–µ—Ä–µ—Å—ã: {interests}\n"
            
            if game_data.get('dating_additional'):
                offer_text += f"üìù –û —Å–µ–±–µ: {game_data.get('dating_additional')}\n"
        elif category == "meeting":
            # –î–ª—è –≤—Å—Ç—Ä–µ—á
            if sport == "‚òïÔ∏è–ë–∏–∑–Ω–µ—Å-–∑–∞–≤—Ç—Ä–∞–∫":
                offer_text = (
                    f"‚òïÔ∏è *–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –±–∏–∑–Ω–µ—Å-–∑–∞–≤—Ç—Ä–∞–∫–∞*\n\n"
                    f"üë§ {profile_link}\n"
                    f"üìç {game_data.get('city', '‚Äî')}\n"
                    f"üìÖ {game_data.get('date', '‚Äî')} –≤ {game_data.get('time', '‚Äî')}\n"
                )
            else:  # –ü–æ –ø–∏–≤—É
                offer_text = (
                    f"üçª *–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –≤—Å—Ç—Ä–µ—á–∏ –∑–∞ –ø–∏–≤–æ–º*\n\n"
                    f"üë§ {profile_link}\n"
                    f"üìç {game_data.get('city', '‚Äî')}\n"
                    f"üìÖ {game_data.get('date', '‚Äî')} –≤ {game_data.get('time', '‚Äî')}\n"
                )
        elif category == "outdoor_sport":
            # –î–ª—è –∞–∫—Ç–∏–≤–Ω—ã—Ö –≤–∏–¥–æ–≤ —Å–ø–æ—Ä—Ç–∞
            offer_text = (
                f"üèÉ *–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏*\n\n"
                f"üë§ {profile_link}\n"
                f"üìç {game_data.get('city', '‚Äî')}\n"
                f"üìÖ {game_data.get('date', '‚Äî')} –≤ {game_data.get('time', '‚Äî')}\n"
                f"üéØ {sport}\n"
            )
        else:  # court_sport
            # –î–ª—è —Å–ø–æ—Ä—Ç–∏–≤–Ω—ã—Ö –≤–∏–¥–æ–≤ —Å –∫–æ—Ä—Ç–∞–º–∏
            offer_text = (
                f"üéæ *–ü—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ –∏–≥—Ä—ã*\n\n"
                f"üë§ {profile_link}\n"
                f"üìç {game_data.get('city', '‚Äî')}\n"
                f"üìÖ {game_data.get('date', '‚Äî')} –≤ {game_data.get('time', '‚Äî')}\n"
                f"üéØ {sport} ‚Ä¢ {game_data.get('type', '‚Äî')}\n"
                f"üí≥ {game_data.get('payment_type', '‚Äî')}"
            )
            
            if game_data.get('competitive'):
                offer_text += f"\nüèÜ –ù–∞ —Å—á–µ—Ç"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π
        if game_data.get('comment'):
            offer_text += f"\nüí¨ {game_data['comment']}"
        
        # –î–æ–±–∞–≤–ª—è–µ–º —Ö–µ—à—Ç–µ–≥
        if category == "dating":
            offer_text += " \n\n#–∑–Ω–∞–∫–æ–º—Å—Ç–≤–∞"
        elif category == "meeting":
            offer_text += " \n\n#–≤—Å—Ç—Ä–µ—á–∏"
        elif category == "outdoor_sport":
            offer_text += " \n\n#–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å"
        else:
            offer_text += " \n\n#–ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ"
            
        # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–∞ —Å–ø–æ—Ä—Ç–∞
        channel_id = channels_id.get(sport, channels_id.get("üéæ–ë–æ–ª—å—à–æ–π —Ç–µ–Ω–Ω–∏—Å"))

        photo_path = user_data.get("photo_path")

        if photo_path:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç –≤ –ø–æ–¥–ø–∏—Å–∏
            await bot.send_photo(
                chat_id=channel_id,
                photo=FSInputFile(BASE_DIR / photo_path),
                caption=offer_text,
                parse_mode="Markdown"
            )
        else:
            # –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç ‚Äî –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(
                chat_id=channel_id,
                text=offer_text,
                parse_mode="Markdown"
            )
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è –∏–≥—Ä—ã: {e}")

async def send_tour_to_channel(bot: Bot, user_id: str, user_data: Dict[str, Any]):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç—É—Ä–µ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª"""
    try:
        profile_link = await create_user_profile_link(user_data, user_id)
        sport = user_data.get('sport', 'üéæ–ë–æ–ª—å—à–æ–π —Ç–µ–Ω–Ω–∏—Å')
        
        # –ü–æ–ª—É—á–∞–µ–º ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ –≤–∏–¥–∞ —Å–ø–æ—Ä—Ç–∞
        channel_id = channels_id.get(sport, channels_id.get("üéæ–ë–æ–ª—å—à–æ–π —Ç–µ–Ω–Ω–∏—Å"))
        
        # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç —Ç—É—Ä–∞
        tour_text = (
            f"‚úàÔ∏è *–¢—É—Ä –ø–æ {sport}*\n\n"
            f"üë§ {profile_link}\n"
            f"üìç –û—Ç–∫—É–¥–∞: {user_data.get('city', '‚Äî')}, {user_data.get('country', '‚Äî')}\n"
            f"üåç –ö—É–¥–∞: {user_data.get('vacation_city', '‚Äî')}, {user_data.get('vacation_country', '‚Äî')}\n"
            f"üìÖ –î–∞—Ç—ã: {user_data.get('vacation_start')} - {user_data.get('vacation_end')}\n"
        )
        
        if user_data.get('vacation_comment'):
            tour_text += f"\nüí¨ {user_data['vacation_comment']}"
        
        tour_text += "\n\n#—Ç—É—Ä"
            
        photo_path = user_data.get("photo_path")

        if photo_path:
            # –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ + —Ç–µ–∫—Å—Ç –≤ –ø–æ–¥–ø–∏—Å–∏
            await bot.send_photo(
                chat_id=channel_id,
                photo=FSInputFile(BASE_DIR / photo_path),
                caption=tour_text,
                parse_mode="Markdown",
                disable_web_page_preview=True
            )
        else:
            # –µ—Å–ª–∏ —Ñ–æ—Ç–æ –Ω–µ—Ç ‚Äî –æ–±—ã—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            await bot.send_message(
                chat_id=channel_id,
                text=tour_text,
                parse_mode="Markdown",
                disable_web_page_preview=True
            )
        
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ç—É—Ä–∞ –≤ –∫–∞–Ω–∞–ª: {e}")

async def send_user_profile_to_channel(bot: Bot, user_id: str, user_data: Dict[str, Any]):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∫–∞–Ω–∞–ª (–¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏)"""
    try:
        city = user_data.get('city', '‚Äî')
        district = user_data.get('district', '')
        if district:
            city = f"{city} - {district}"
            
        username_text = "\n"
        if user_data.get('username'):
            username_text = f"‚úâÔ∏è @{user_data.get('username')}\n\n"
        
        role = user_data.get('role', '–ò–≥—Ä–æ–∫')
        channel_id = channels_id[user_data.get('sport')]

        # –†–∞–∑–Ω–æ–µ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–ª—è —Ç—Ä–µ–Ω–µ—Ä–æ–≤ –∏ –∏–≥—Ä–æ–∫–æ–≤
        if role == "–¢—Ä–µ–Ω–µ—Ä":
            profile_text = (
                "üë®‚Äçüè´ <b>–ù–æ–≤—ã–π —Ç—Ä–µ–Ω–µ—Ä –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ!</b>\n\n"
                f"üèÜ {await create_user_profile_link(user_data, user_id)}\n"
                f"üí∞ {user_data.get('price', 0)} —Ä—É–±./—Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫–∞\n"
                f"üìç {city} ({user_data.get('country', '')})\n"
                f"{username_text}"
                f"#—Ç—Ä–µ–Ω–µ—Ä"
            )
        else:
            profile_text = (
                "üéæ <b>–ù–æ–≤—ã–π –∏–≥—Ä–æ–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏–ª—Å—è –∫ —Å–æ–æ–±—â–µ—Å—Ç–≤—É!</b>\n\n"
                f"üë§ {await create_user_profile_link(user_data, user_id)}\n" 
                f"üí™ {user_data.get('player_level', '–ù–µ —É–∫–∞–∑–∞–Ω')} —É—Ä–æ–≤–µ–Ω—å –∏–≥—Ä—ã\n"
                f"üìç {city} ({user_data.get('country', '')})\n"
                f"{username_text}"
                f"#–∏–≥—Ä–æ–∫"
            )
        
        photo_path = user_data.get("photo_path")

        if photo_path:
            await bot.send_photo(
                chat_id=channel_id,
                photo=FSInputFile(BASE_DIR / photo_path),
                caption=profile_text,
                parse_mode="HTML"
            )
        else:
            await bot.send_message(
                chat_id=channel_id,
                text=profile_text,
                parse_mode="HTML"
            )
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∞–Ω–∫–µ—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {e}")
